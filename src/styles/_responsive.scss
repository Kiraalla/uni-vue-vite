@use "sass:math";
@use "sass:map";

$breakpoints: (
  sm: 576px,
  md: 768px,
  lg: 992px,
  xl: 1200px
);

@mixin respond-above($breakpoint) {
  @if map.has-key($breakpoints, $breakpoint) {
    @media (min-width: map.get($breakpoints, $breakpoint)) {
      @content;
    }
  }
}

@mixin responsive-grid($breakpoint) {
  @for $i from 1 through 12 {
    .col-#{$breakpoint}-#{$i} {
      flex: 0 0 math.percentage(math.div($i, 12));
      max-width: math.percentage(math.div($i, 12));
    }
  }
}

@media (min-width: 576px) {
  @include responsive-grid('sm');
}

@media (min-width: 768px) {
  @include responsive-grid('md');
}

// Grid 列数系统
$grid-columns: (
  1: 1fr,
  2: repeat(2, 1fr),
  3: repeat(3, 1fr),
  4: repeat(4, 1fr),
  5: repeat(5, 1fr),
  6: repeat(6, 1fr),
  7: repeat(7, 1fr),
  8: repeat(8, 1fr),
  9: repeat(9, 1fr),
  10: repeat(10, 1fr),
  11: repeat(11, 1fr),
  12: repeat(12, 1fr)
);
@include generate-utility('grid-template-columns', $grid-columns, 'grid-cols-');

@each $bp, $width in $breakpoints {
  @include respond-above($bp) {
    @for $i from 1 through 12 {
      .col-#{$bp}-#{$i} {
        flex: 0 0 math.percentage(math.div($i, 12));
        max-width: math.percentage(math.div($i, 12));
      }
    }
  }
}