@use "sass:map";
@use "sass:string";
@use "sass:meta";
@forward './_variables';
@use './_variables' as *;

// ================== 基础混入 ==================
// 通用工具类生成器
@function get-short($key) {
  @return if(meta.type-of($key) == 'string', string.slice($key, 1, 3), '');
}

@mixin generate-utility($property, $values, $prefix: '') {
  @each $key, $value in $values {
    .#{$prefix}#{''+$key} {
      #{$property}: $value;
    }
  }
}

// 多行文本截断
@mixin text-truncate-lines($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
}

// 文本渐变
@mixin text-gradient($start-color, $end-color, $direction: to right) {
  background: linear-gradient($direction, $start-color, $end-color);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

// Flex布局快捷方式
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

// Grid布局助手
@mixin grid-auto-fit($min-size: 200px, $gap: 1rem) {
  display: grid;
  gap: $gap;
  grid-template-columns: repeat(auto-fit, minmax($min-size, 1fr));
}

// 交互效果
@mixin hover-lift($distance: -3px) {
  transition: transform 0.2s ease;
  &:hover {
    transform: translateY($distance);
  }
}

@mixin hover-scale($scale: 1.05) {
  transition: transform 0.2s ease;
  &:hover {
    transform: scale($scale);
  }
}

@mixin focus-ring($color: var(--primary), $offset: 2px) {
  &:focus {
    outline: none;
    box-shadow: 0 0 0 $offset $color;
  }
}

// ================== 核心工具类 ==================
// 颜色系统
@include generate-utility('color', $mapColor, 'text-');
@include generate-utility('background-color', $mapColor, 'bg-');

// 布局系统
.wy-flex {
  display: flex;
  &-col { flex-direction: column; }
  &-wrap { flex-wrap: wrap; }
  &-nowrap { flex-wrap: nowrap; }
}

.wy-grid { display: grid; }

// Grid 列数系统
$grid-columns: (
  1: 1fr,
  2: repeat(2, 1fr),
  3: repeat(3, 1fr),
  4: repeat(4, 1fr),
  5: repeat(5, 1fr),
  6: repeat(6, 1fr),
  7: repeat(7, 1fr),
  8: repeat(8, 1fr),
  9: repeat(9, 1fr),
  10: repeat(10, 1fr),
  11: repeat(11, 1fr),
  12: repeat(12, 1fr)
);
@include generate-utility('grid-template-columns', $grid-columns, 'grid-cols-');

// Flexbox & Grid 对齐系统
$alignment-values: (
  start: flex-start,
  end: flex-end,
  center: center,
  stretch: stretch
);

$justify-values: map.merge($alignment-values, (
  between: space-between,
  around: space-around
));

@include generate-utility('align-items', $alignment-values, 'ai-');
@include generate-utility('align-self', $alignment-values, 'as-');
@include generate-utility('justify-content', $justify-values, 'jc-');
@include generate-utility('justify-items', $alignment-values, 'ji-');
@include generate-utility('justify-self', $alignment-values, 'js-');

// 定位系统
.pos {
  @each $pos in relative, absolute, fixed, sticky {
    &-#{get-short($pos)},
    &-#{$pos} { position: $pos; }
  }
  
  &-center {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }
}

// z-index 系统
@for $i from -5 through 5 {
// 如果$i小于0，$i = 'n'+|$i|
// 如果$i大于0，$i = $i * $spacing-base
  $num: if($i < 0, 'n' + abs($i * $spacing-base), $i * $spacing-base);
  .z-#{$num} { z-index: #{$i * $spacing-base}; }
}
// 图片系统
.img {
  &-fluid {
    max-width: 100%;
    height: auto;
    display: block;
  }
  
  @each $fit in cover, contain {
    &-#{$fit} { object-fit: $fit; }
  }
  
  &-gray { filter: grayscale(100%); }
}

// 文字系统
.text {
  &-center { text-align: center; }
  &-left { text-align: left; }
  &-right { text-align: right; }
  &-ellipsis {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }
}

// 视觉效果
$shadows: (
  'sm': '0 1px 2px 0 rgba(0, 0, 0, 0.05)',
  'default': '0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06)',
  'lg': '0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)'
);

@each $key, $value in $shadows {
  $class-name: if($key == 'default', '', '-#{$key}');
  .shadow#{$class-name} { box-shadow: #{$value}; }
}

// 透明度系统
@for $i from 0 through 4 {
  .opacity-#{$i * 25} { opacity: #{$i * 0.25}; }
}

// 可见性
.hidden { display: none; }
.visible { overflow: visible; }

// 尺寸函数
@function get-size($value) {
  @return if($value == 0, 0, $value * $unit-value + $unit-base);
}

// 间距系统
@for $i from -10 to 0 {
  $i : $i * $spacing-base;
  $num : abs($i);
  // Directions
  @each $dir, $prop in (t: top, r: right, b: bottom, l: left) {
    .wy-m#{$dir}-#{'n'+$num} { margin-#{$prop}: get-size($i); }
  }
}
@for $i from 0 through 30 {
  $i : if($i == 0, 0, $i * $spacing-base);
  // Margin
  .wy-m-#{$i} { margin: get-size($i); }
  // Axis
  .wy-mx-#{$i} { margin-left: get-size($i); margin-right: get-size($i); }
  .wy-my-#{$i} { margin-top: get-size($i); margin-bottom: get-size($i); }
  // Directions
  @each $dir, $prop in (t: top, r: right, b: bottom, l: left) {
    .wy-m#{$dir}-#{$i} { margin-#{$prop}: get-size($i); }
  }
  
  // Padding
  .wy-p-#{$i} { padding: get-size($i); }
  // Axis
  .wy-px-#{$i} { padding-left: get-size($i); padding-right: get-size($i); }
  .wy-py-#{$i} { padding-top: get-size($i); padding-bottom: get-size($i); }
  // Directions
  @each $dir, $prop in (t: top, r: right, b: bottom, l: left) {
    .wy-p#{$dir}-#{$i} { padding-#{$prop}: get-size($i); }
  }
}

// 尺寸工具类
@for $i from 1 through 30 {
  $value: $i * $spacing-base;
  .w-#{$i} { width: get-size($value); }
  .h-#{$i} { height: get-size($value); }
}

// 字体大小系统
@for $i from 12 through 48 {
  .font-#{$i} { font-size: #{$i * $unit-value}#{$unit-base}; }
}

// Gap 系统
@for $i from 0 through 10 {
  .gap-#{$i} { gap: if($i == 0, 0, #{$i * $spacing-base * $unit-value}#{$unit-base}); }
}
// 圆角系统
$border-radius: (
  'sm': 2,
  'default': 4,
  'lg': 8,
  'full': 999
);

@each $key, $value in $border-radius {
  $class-name: if($key == 'default', '', '-#{$key}');
  .rounded#{$class-name} { 
    border-radius: #{$value * $unit-value}#{$unit-base};
  }
}