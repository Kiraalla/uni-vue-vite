@use "sass:map";
@use "sass:string";
@use "sass:meta";
@forward './_variables';
@use './_variables' as *;

// ================== 基础配置 ==================
$unit-value: 2; // 单位倍率
$unit-base: rpx !default; // 基础单位类型
$spacing-base: 2 !default; // 基础间距数值

// ================== 工具函数 ==================
// 通用工具类生成器
@function get-short($key) {
  @return if(meta.type-of($key)=='string', string.slice($key, 1, 4), '');
}

@function get-size($value) {
  @return if($value ==0, 0, $value * $unit-value + $unit-base);
}

@function get-percent($value) {
  @return if($value ==0, 0, #{$value + '%'});
}

@mixin generate-utility($property, $values, $prefix: '') {
  @each $key, $value in $values {
    .#{$prefix}#{''+$key} {
      #{$property}: $value;
    }
  }
}

// ================== 通用混合器 ==================
// 多行文本截断
@mixin text-truncate-lines($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
}

// 文本渐变
@mixin text-gradient($start-color, $end-color, $direction: to right) {
  background: linear-gradient($direction, $start-color, $end-color);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

// Flex布局快捷方式
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

// Grid布局助手
@mixin grid-auto-fit($min-size: 200px, $gap: 1rem) {
  display: grid;
  gap: $gap;
  grid-template-columns: repeat(auto-fit, minmax($min-size, 1fr));
}

// 交互效果
@mixin hover-lift($distance: -3px) {
  transition: transform 0.2s ease;

  &:hover {
    transform: translateY($distance);
  }
}

@mixin hover-scale($scale: 1.05) {
  transition: transform 0.2s ease;

  &:hover {
    transform: scale($scale);
  }
}

@mixin focus-ring($color: var(--primary), $offset: 2px) {
  &:focus {
    outline: none;
    box-shadow: 0 0 0 $offset $color;
  }
}

// 可见性
.hidden {
  display: none;
}

.visible {
  overflow: visible;
}

// ================== 布局系统 ==================
// Flexbox布局
.flex {
  display: flex;

  &-col {
    display: flex;
    flex-direction: column;
  }

  &-wrap {
    flex-wrap: wrap;
  }

  &-nowrap {
    flex-wrap: nowrap;
  }
}

// Grid布局
.grid {
  display: grid;
}

// Flexbox & Grid 对齐系统
$alignment-values: (
  start: flex-start,
  end: flex-end,
  center: center,
  stretch: stretch
);

$justify-values: map.merge($alignment-values, (between: space-between,
      around: space-around));

@include generate-utility('align-items', $alignment-values, 'ai-');
@include generate-utility('align-self', $alignment-values, 'as-');
@include generate-utility('justify-content', $justify-values, 'jc-');
@include generate-utility('justify-items', $alignment-values, 'ji-');
@include generate-utility('justify-self', $alignment-values, 'js-');

// 定位系统
.pos {
  @each $pos in relative, absolute, fixed, sticky {

    &-#{get-short($pos)},
    &-#{$pos} {
      position: $pos;
    }
  }

  &-center {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }
}
// z-index 系统
@for $i from -5 through 5 {
  $num: if($i < 0, 'n' + abs($i * $spacing-base), $i * $spacing-base);

  .z-#{$num} {
    z-index: #{$i * $spacing-base};
  }
}

@for $i from 1 through 10 {
  $num: if($i < 0, 'n' + abs($i * $spacing-base), $i * $spacing-base);
  $num: $i * 100;

  .z-#{$num} {
    z-index: #{$i * $spacing-base};
  }
}
// ================== 视觉效果 ==================
// 颜色系统
$mapColor: (
  primary: var(--primary),
  accent: var(--accent),
  link: var(--link),
  success: var(--success),
  warning: var(--warning),
  danger: var(--danger),
  background: var(--background),
  dividers: var(--dividers),
  mask: var(--mask),
  title: var(--title),
  subtitle: var(--subtitle),
  disabled: var(--disabled),
  border: var(--border),
  light: $light,
  dark: $dark,
  white: $white,
  black: $black,
  333: $hex-333,
  666: $hex-666,
  999: $hex-999,
  eee: $hex-eee,
  ddd: $hex-ddd,
  f0: $f0,
  f5: $f5,
  f7: $f7,
  black-20: $black-20,
  black-40: $black-40,
  black-60: $black-60,
  black-80: $black-80,
  white-20: $white-20,
  white-40: $white-40,
  white-60: $white-60,
  white-80: $white-80,
);

.text {
  &-center {
    text-align: center;
  }

  &-left {
    text-align: left;
  }

  &-right {
    text-align: right;
  }

  &-ellipsis {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }
}
@include generate-utility('color', $mapColor, 'text-');
@include generate-utility('background-color', $mapColor, 'bg-');

// 图片样式
.img {
  &-fluid {
    max-width: 100%;
    height: auto;
    display: block;
  }

  @each $fit in cover, contain {
    &-#{$fit} {
      object-fit: $fit;
    }
  }

  &-gray {
    filter: grayscale(100%);
  }
}

// 阴影效果
$shadows: (
  'sm': '0 1px 2px 0 rgba(0, 0, 0, 0.05)',
  'default': '0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06)',
  'lg': '0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)'
);

@each $key, $value in $shadows {
  $class-name: if($key =='default', '', '-#{$key}');

  .shadow#{$class-name} {
    box-shadow: #{$value};
  }
}

// 圆角系统
$border-radius: (
  'sm': 2,
  'default': 4,
  'lg': 8,
  'full': 999
);

@each $key, $value in $border-radius {
  $class-name: if($key =='default', '', '-#{$key}');

  .rounded#{$class-name} {
    border-radius: #{get-size($value)};
  }
}

// 透明度系统
@for $i from 0 through 4 {
  .opacity-#{$i * 25} {
    opacity: #{$i * 0.25};
  }
}

// ================== 尺寸和间距系统 ==================
// 字体大小系统
@for $i from 6 through 24 {
  $value: $i * 2;

  .font-#{$value} {
    font-size: #{$value * $unit-value}#{$unit-base};
  }
}

// 间距系统
@for $i from -10 to 0 {
  $i: $i * $spacing-base;
  $num: abs($i);

  @each $dir, $prop in (t: top, r: right, b: bottom, l: left) {
    .m#{$dir}-#{'n'+$num} {
      margin-#{$prop}: get-size($i);
    }
  }
}

@for $i from 0 through 24 {
  $i: if($i ==0, 0, $i * $spacing-base);

  // Margin
  .m-#{$i} {
    margin: get-size($i);
  }

  .mx-#{$i} {
    margin-left: get-size($i);
    margin-right: get-size($i);
  }

  .my-#{$i} {
    margin-top: get-size($i);
    margin-bottom: get-size($i);
  }

  @each $dir, $prop in (t: top, r: right, b: bottom, l: left) {
    .m#{$dir}-#{$i} {
      margin-#{$prop}: get-size($i);
    }
  }

  // Padding
  .p-#{$i} {
    padding: get-size($i);
  }

  .px-#{$i} {
    padding-left: get-size($i);
    padding-right: get-size($i);
  }

  .py-#{$i} {
    padding-top: get-size($i);
    padding-bottom: get-size($i);
  }

  @each $dir, $prop in (t: top, r: right, b: bottom, l: left) {
    .p#{$dir}-#{$i} {
      padding-#{$prop}: get-size($i);
    }
  }
}

// Gap 系统
@for $i from 0 through 10 {
  .gap-#{$i * $spacing-base} {
    gap: if($i ==0, 0, #{$i * $spacing-base * $unit-value}#{$unit-base});
  }
}

// 尺寸工具类
@for $i from 0 through 20 {
  $value: $i * 5;

  .w-#{$value} {
    width: get-percent($value);
  }

  .h-#{$value} {
    height: get-percent($value);
  }
}

@for $i from 1 through 10 {
  $value: $i * 10;

  .w-#{$value}px {
    width: get-size($value);
  }

  .h-#{$value}px {
    height: get-size($value);
  }
}